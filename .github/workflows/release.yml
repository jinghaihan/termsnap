name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            binary_name: termsnap-${{ github.ref_name }}-linux-x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            binary_name: termsnap-${{ github.ref_name }}-linux-arm64
          - os: macos-latest
            platform: darwin
            arch: amd64
            binary_name: termsnap-${{ github.ref_name }}-darwin-x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            binary_name: termsnap-${{ github.ref_name }}-darwin-arm64
          - os: windows-latest
            platform: windows
            arch: amd64
            binary_name: termsnap-${{ github.ref_name }}-win32-x64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build binary
        shell: bash
        run: |
          GOOS=${{ matrix.platform }} GOARCH=${{ matrix.arch }} go build -o ${{ matrix.binary_name }} main.go
          chmod +x ${{ matrix.binary_name }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: ${{ matrix.binary_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: binaries
          pattern: termsnap-*
          merge-multiple: true

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Upload binaries to release
        run: |
          TAG_NAME="${{ github.ref_name }}"
          REPO="${{ github.repository }}"

          # Upload each binary using gh release upload
          for binary in binaries/*; do
            gh release upload "$TAG_NAME" "$binary" --repo "$REPO" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
